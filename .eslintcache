[{"/home/it-park/Desktop/Exam/src/index.js":"1","/home/it-park/Desktop/Exam/src/components/App/App.js":"2","/home/it-park/Desktop/Exam/src/components/Navbar/Navbar.js":"3","/home/it-park/Desktop/Exam/src/components/PRODUCTS/products.js":"4","/home/it-park/Desktop/Exam/src/components/PRODUCTS/item.js":"5","/home/it-park/Desktop/Exam/src/components/PRODUCTS/detail.js":"6"},{"size":387,"mtime":1610861103345,"results":"7","hashOfConfig":"8"},{"size":1496,"mtime":1610872120868,"results":"9","hashOfConfig":"8"},{"size":1460,"mtime":1610863997726,"results":"10","hashOfConfig":"8"},{"size":1200,"mtime":1610869242731,"results":"11","hashOfConfig":"8"},{"size":804,"mtime":1610871546214,"results":"12","hashOfConfig":"8"},{"size":802,"mtime":1610874739254,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1xgv713",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/it-park/Desktop/Exam/src/index.js",[],["30","31"],"/home/it-park/Desktop/Exam/src/components/App/App.js",["32"],"import React, {Component} from 'react';\nimport NavbarC from \"../Navbar/Navbar\";\nimport Products from \"../PRODUCTS/products\";\nimport axios from \"axios\"\nimport {Container, Jumbotron} from \"react-bootstrap\";\nimport {withRouter, Route, Switch} from \"react-router-dom\";\nimport Detail from \"../PRODUCTS/detail\";\n\n\nclass App extends Component {\n    state = {\n        products: {\n            count: 0,\n            results: []\n        },\n    }\n\n    componentDidMount() {\n        this.getProduct()\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n\n        if (this.props.location.search !== prevProps.location.search) {\n            this.getProduct()\n        }\n    }\n\n    getProduct = () => {\n        const search = this.props.location.search\n        axios.get(\"https://ecommerce-7-api.itpark.edu.kg/api/products/\" + search).then((response) => {\n            this.setState({products: response.data})\n        })\n    }\n\n\n    render() {\n        const state = this.state\n        return (\n            <div>\n                <NavbarC/>,\n                <Container>\n                    <Jumbotron>\n                        <Route exact path={\"/\"}>\n                            <Products products={state.products}/>\n                        </Route>\n                        <Route exact path={\"/:id\"}>\n                            <Detail/>\n                        </Route>\n                    </Jumbotron>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(App);","/home/it-park/Desktop/Exam/src/components/Navbar/Navbar.js",["33","34","35"],"import React, {Component} from 'react';\nimport {Navbar, Container, Button} from \"react-bootstrap\";\n\nclass NavbarC extends Component {\n    render() {\n        return (\n            <Navbar className=\"navbar navbar-expand-lg navbar-light bg-primary\" variant=\"dark\" fixed>\n                <Container>\n                    <div className=\"container-fluid\">\n                        <a className=\"navbar-brand\" href=\"#\">ЖУН ПАЙПАК!</a>\n                        <Button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\"\n                                data-bs-target=\"#navbarText\" aria-controls=\"navbarText\" aria-expanded=\"false\"\n                                aria-label=\"Toggle navigation\">\n                        </Button>\n                        <div className=\"collapse navbar-collapse\" id=\"navbarText\">\n                            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                                <li className=\"nav-item\">\n                                    <a className=\"nav-link \" aria-current=\"page\" href=\"#\">Home</a>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <a className=\"nav-link\" href=\"#\">Detail</a>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </Container>\n            </Navbar>\n        );\n    }\n}\n\nexport default NavbarC;","/home/it-park/Desktop/Exam/src/components/PRODUCTS/products.js",[],"/home/it-park/Desktop/Exam/src/components/PRODUCTS/item.js",["36"],"import React from 'react';\nimport {CardImg, Card, Button} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\n\nconst Item = ({item}) => {\n    return (\n        <div className=\"col-md-4 mt-2\">\n            <Card>\n                <CardImg src={item.images[0].original} className=\"card-img-top\" />\n                    <Card.Body>\n                        <Card.Title className=\"card-title\">{item.title}</Card.Title>\n                        <Card.Text className=\"card-text\">Some quick example text to build on the card title and make up\n                            the bulk of the card's content.</Card.Text>\n                    </Card.Body>\n                    <Link to={\"/\"+item.id+\"/\"} className=\"btn btn-outline-danger\">Detail</Link>\n            </Card>\n        </div>\n);\n};\n\nexport default Item;","/home/it-park/Desktop/Exam/src/components/PRODUCTS/detail.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":6,"column":28,"nodeType":"43","messageId":"44","endLine":6,"endColumn":34},{"ruleId":"45","severity":1,"message":"46","line":10,"column":25,"nodeType":"47","endLine":10,"endColumn":62},{"ruleId":"45","severity":1,"message":"46","line":18,"column":37,"nodeType":"47","endLine":18,"endColumn":91},{"ruleId":"45","severity":1,"message":"46","line":21,"column":37,"nodeType":"47","endLine":21,"endColumn":70},{"ruleId":"41","severity":1,"message":"48","line":2,"column":24,"nodeType":"43","messageId":"44","endLine":2,"endColumn":30},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]